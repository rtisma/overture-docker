FROM openjdk:8-jre-alpine

# example:  1.4.1
ARG SONG_VERSION
RUN test -n "$SONG_VERSION"
ENV SONG_VERSION $SONG_VERSION

# example dcc-release
ARG SONG_ARTIFACTORY_REPO_NAME
RUN test -n "$SONG_ARTIFACTORY_REPO_NAME"
ENV SONG_ARTIFACTORY_REPO_NAME $SONG_ARTIFACTORY_REPO_NAME

RUN apk add --no-cache python3 && \
    python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --upgrade pip setuptools && \
    if [ ! -e /usr/bin/pip  ]; then ln -s pip3 /usr/bin/pip ; fi && \
    if [[ ! -e /usr/bin/python  ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
    rm -r /root/.cache

# Directory Paths
ENV SONG_HOME /song-server
ENV SONG_TOOLS $SONG_HOME/tools
ENV SONG_CONF $SONG_HOME/conf
ENV SONG_TEMPLATES $SONG_HOME/templates
ENV SONG_LIB $SONG_HOME/lib
ENV SONG_LOGS $SONG_HOME/logs


# File paths
ENV EXPAND_SCRIPT       $SONG_TOOLS/expand.py
ENV LOGGING_CONFIG_FILE $SONG_CONF/logback.xml
ENV INPUT_FILE          $SONG_TEMPLATES/application.properties.template
ENV OUTPUT_FILE         $SONG_CONF/application-secure.properties
ENV JAR_FILE            $SONG_LIB/song-server.jar

RUN mkdir -p $SONG_HOME $SONG_TOOLS $SONG_CONF $SONG_TEMPLATES $SONG_LIB $SONG_LOGS

COPY tools/expand.py  $EXPAND_SCRIPT
COPY song/application-secure.properties.template $INPUT_FILE
COPY song/logback.xml $LOGGING_CONFIG_FILE

RUN wget https://artifacts.oicr.on.ca/artifactory/$SONG_ARTIFACTORY_REPO_NAME/bio/overture/song-server/$SONG_VERSION/song-server-$SONG_VERSION-exec.jar -O $JAR_FILE

WORKDIR $SONG_HOME

CMD python3 $EXPAND_SCRIPT $INPUT_FILE $OUTPUT_FILE && \
    java -Dlog.path=$SONG_LOGS \
    -jar $JAR_FILE \
    --spring.config.location=classpath:/,file:$SONG_CONF/ \
    --spring.profiles.active=prod,secure,default \
    --logging.config=$LOGGING_CONFIG_FILE

#&& FOR_100_YEARS=$((100*365*24*60*60));while true;do sleep $FOR_100_YEARS;done
